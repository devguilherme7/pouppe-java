plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'jacoco'
}

group = 'com.pouppe'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = '10.12.0'
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

jacoco {
    toolVersion = "0.8.12"
    reportsDirectory = layout.buildDirectory.dir("reports/jacoco")
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required = true
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
    }
}

spotless {
    java {
        removeUnusedImports()
        importOrder('java', 'jakarta', 'org', 'com', 'net', '')
        eclipse().configFile(rootProject.file('config/eclipse/eclipse-formatter.xml'))
        endWithNewline()
        trimTrailingWhitespace()
    }

    format 'misc', {
        target '*.md', '*.yml', '*.properties'
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }

    lineEndings = "UNIX"
}